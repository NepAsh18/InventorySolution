@model InventorySolution.Models.ViewModels.ProductEditVM
@{
    ViewData["Title"] = "Edit Product";
    Layout = "_AdminLayout";
}

<div class="header-gradient py-4">
    <div class="container">
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-center">
            <div class="text-center text-md-start mb-3 mb-md-0">
                <h1 class="display-5 fw-bold"><i class="bi bi-pencil me-2"></i>Edit Product</h1>
                <p class="lead mb-0">Update product details</p>
            </div>
            <a asp-action="Index" class="btn btn-light">
                <i class="bi bi-arrow-left me-1"></i> Back to List
            </a>
        </div>
    </div>
</div>

<div class="container py-4">
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>
            <strong>Please fix the following errors:</strong>
            <ul class="mt-2 mb-0">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card border-0 shadow-sm mb-4">
        <div class="card-header bg-primary text-white py-3">
            <h5 class="mb-0"><i class="bi bi-box-seam me-2"></i>Product Information</h5>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post" enctype="multipart/form-data" class="row g-3">
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="ImagePath" />

                <!-- REMOVED ALL PRICE AND QUANTITY REFERENCES -->

                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Name" class="form-label fw-bold">Product Name *</label>
                        <input asp-for="Name" class="form-control form-control-lg" />
                        <span asp-validation-for="Name" class="text-danger small"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label fw-bold">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Description" class="text-danger small"></span>
                    </div>

                    <div class="row g-3">
                        <div class="col-md-12">
                            <div class="mb-3">
                                <label asp-for="ReorderLevel" class="form-label fw-bold">Reorder Level</label>
                                <input asp-for="ReorderLevel" class="form-control form-control-lg" />
                                <span asp-validation-for="ReorderLevel" class="text-danger small"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CategoryId" class="form-label fw-bold">Category *</label>
                                <select asp-for="CategoryId" class="form-select form-select-lg"
                                        asp-items="@(new SelectList(ViewBag.Categories, "Id", "Name"))">
                                    <option value="">-- Select Category --</option>
                                </select>
                                <span asp-validation-for="CategoryId" class="text-danger small"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="UnitMeasureId" class="form-label fw-bold">Unit of Measure *</label>
                                <select asp-for="UnitMeasureId" class="form-select form-select-lg"
                                        asp-items="@(new SelectList(ViewBag.UnitMeasures, "Id", "Name"))">
                                    <option value="">-- Select Unit --</option>
                                </select>
                                <span asp-validation-for="UnitMeasureId" class="text-danger small"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="mb-4">
                        <label class="form-label fw-bold">Product Image</label>
                        <div class="border rounded p-3 text-center bg-light">
                            @if (!string.IsNullOrEmpty(Model.ImagePath))
                            {
                                <img id="existingImage" src="@Model.ImagePath" class="img-fluid rounded mb-3" style="max-height: 200px;">
                            }
                            else
                            {
                                <div class="bg-secondary rounded d-flex align-items-center justify-content-center mb-3" style="height: 200px;">
                                    <i class="bi bi-image text-white" style="font-size: 3rem;"></i>
                                </div>
                            }
                            <div id="newImagePreview" style="display: none;">
                                <img id="imagePreview" class="img-fluid rounded mb-3" style="max-height: 200px;">
                            </div>
                            <div class="d-flex flex-column align-items-center">
                                <div class="mb-2 w-100">
                                    <input type="file" name="imageFile" class="form-control"
                                           accept="image/*" id="imageUpload">
                                    <span class="text-danger small">@Html.ValidationMessage("imageFile")</span>
                                </div>
                                <p class="text-muted small mb-0">JPG, PNG or GIF - Max 5MB</p>
                                <p class="text-muted small">Leave empty to keep current image</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-12">
                    <div class="d-flex justify-content-end mt-4">
                        <button type="submit" class="btn btn-primary btn-lg me-2">
                            <i class="bi bi-check-circle me-1"></i> Save Changes
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary btn-lg">
                            <i class="bi bi-x-circle me-1"></i> Cancel
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="d-grid">
        <a asp-action="ManageBatches" asp-route-id="@Model.Id" class="btn btn-info btn-lg">
            <i class="bi bi-layers me-1"></i> Manage Batches
        </a>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const imageUpload = document.getElementById('imageUpload');

            if (imageUpload) {
                imageUpload.addEventListener('change', function(e) {
                    const preview = document.getElementById('imagePreview');
                    const container = document.getElementById('newImagePreview');
                    const existingImage = document.getElementById('existingImage');
                    const placeholder = document.querySelector('.bg-secondary');

                    if (this.files && this.files[0]) {
                        const file = this.files[0];

                        // Validate file size (max 5MB)
                        if (file.size > 5 * 1024 * 1024) {
                            alert('File size exceeds 5MB limit');
                            this.value = '';
                            return;
                        }

                        // Validate file type
                        const validTypes = ['image/jpeg', 'image/png', 'image/gif'];
                        if (!validTypes.includes(file.type)) {
                            alert('Only JPG, PNG or GIF images are allowed');
                            this.value = '';
                            return;
                        }

                        const reader = new FileReader();
                        reader.onload = function(e) {
                            if (preview) {
                                preview.src = e.target.result;
                                container.style.display = 'block';
                                if (existingImage) existingImage.style.display = 'none';
                                if (placeholder) placeholder.style.display = 'none';
                            }
                        }
                        reader.readAsDataURL(file);
                    } else {
                        if (container) container.style.display = 'none';
                        if (existingImage) existingImage.style.display = 'block';
                        if (placeholder && !existingImage) placeholder.style.display = 'flex';
                    }
                });
            }
        });
    </script>
}