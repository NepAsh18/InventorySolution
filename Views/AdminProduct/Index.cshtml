@using InventorySolution.Models.Entities
@model IEnumerable<Product>
@{
    ViewData["Title"] = "Product Inventory";
    Layout = "_AdminLayout";

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        :root {
            --dark-green: #347433;
            --amber: #FFC107;
            --light-purple: #C0C9EE;
            --dark-purple: #725CAD;
        }

        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .header-gradient {
            background: linear-gradient(135deg, var(--dark-purple), var(--dark-green));
            color: white;
            padding: 1.5rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 15px 15px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .btn-purple {
            background-color: var(--dark-purple);
            border-color: var(--dark-purple);
            color: white;
            transition: all 0.3s;
        }

            .btn-purple:hover {
                background-color: #614a8f;
                border-color: #614a8f;
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(114, 92, 173, 0.3);
            }

        .btn-outline-purple {
            border-color: var(--dark-purple);
            color: var(--dark-purple);
        }

            .btn-outline-purple:hover {
                background-color: var(--dark-purple);
                color: white;
            }

        .card {
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            border: none;
            margin-bottom: 1.5rem;
        }

        .card-header {
            background: linear-gradient(135deg, var(--dark-purple), #614a8f);
            color: white;
            border-radius: 12px 12px 0 0 !important;
            font-weight: 600;
            padding: 1rem 1.5rem;
        }

        .alert-warning {
            background: linear-gradient(to right, #fff8e1, white);
            border-left: 4px solid var(--amber);
            border-radius: 8px;
        }

        .expired-row {
            position: relative;
            background-color: rgba(220, 53, 69, 0.05);
        }

            .expired-row::after {
                content: '';
                position: absolute;
                top: 50%;
                left: 0;
                right: 0;
                height: 2px;
                background: #dc3545;
                z-index: 1;
            }

        .badge-expired {
            background-color: #dc3545;
            color: white;
            padding: 0.35em 0.6em;
            font-size: 0.75em;
            border-radius: 0.5rem;
        }

        .badge-low {
            background-color: var(--amber);
            color: #333;
            padding: 0.35em 0.6em;
            font-size: 0.75em;
            border-radius: 0.5rem;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(192, 201, 238, 0.3);
        }

        .product-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 8px;
            border: 1px solid var(--light-purple);
        }

        .action-buttons .btn {
            margin: 0 3px;
            transition: all 0.2s;
        }

            .action-buttons .btn:hover {
                transform: scale(1.1);
            }

        .search-container {
            position: relative;
        }

        .search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--dark-purple);
            z-index: 10;
        }

        .search-input {
            padding-left: 40px;
            border-radius: 50px;
            border: 2px solid var(--light-purple);
        }

            .search-input:focus {
                border-color: var(--dark-purple);
                box-shadow: 0 0 0 0.25rem rgba(114, 92, 173, 0.25);
            }
    </style>
</head>
<body>
    <div class="header-gradient">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-5 fw-bold"><i class="bi bi-box-seam me-3"></i>Product Inventory</h1>
                    <p class="mb-0">Manage your products and track inventory levels</p>
                </div>
                <a asp-action="Create" class="btn btn-light">
                    <i class="bi bi-plus-circle me-1"></i> Add New Product
                </a>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Search and Filter Panel -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="bi bi-search me-1"></i> Search  Products
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <form asp-action="Index" method="get">
                            <div class="search-container">
                                <i class="bi bi-search search-icon"></i>
                                <input type="text" name="searchString" class="form-control search-input"
                                       placeholder="Search products..." value="@ViewBag.CurrentFilter">
                            </div>
                        </form>
                    </div>
                    
                </div>
            </div>
        </div>

        <!-- Restock Alerts Section -->
        @if (ViewBag.CriticalAlerts != null && ViewBag.CriticalAlerts.Count > 0)
        {
            <div class="alert alert-warning mb-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-exclamation-triangle-fill fs-4 me-3 text-warning"></i>
                        <div>
                            <h5 class="mb-0">Restock Needed</h5>
                            <p class="mb-0">Critical stock levels detected</p>
                        </div>
                    </div>
                    <span class="badge bg-danger">@ViewBag.CriticalAlerts.Count critical</span>
                </div>
                <hr>
                <div class="row">
                    @foreach (var alert in ViewBag.CriticalAlerts)
                    {
                        <div class="col-md-6 mb-2">
                            <div class="d-flex justify-content-between align-items-center p-3 border rounded bg-light">
                                <div>
                                    <strong>@alert.Product.Name</strong>
                                    <div class="text-danger">
                                        <small>
                                            Stock: @alert.Product.Quantity |
                                            Reorder: @alert.Product.ReorderLevel |
                                            Deficit: @alert.StockDeficit
                                        </small>
                                    </div>
                                </div>
                                <a asp-action="Edit" asp-route-id="@alert.Product.Id" class="btn btn-sm btn-outline-danger">
                                    <i class="bi bi-arrow-repeat"></i> Restock
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Products Table -->
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>
                    <i class="bi bi-list me-2"></i> Product List
                    <span class="badge bg-light text-dark ms-2">@Model.Count() items</span>
                </div>
                <div>
                    <button class="btn btn-sm btn-light me-1" title="Refresh">
                        <i class="bi bi-arrow-repeat"></i>
                    </button>
                    <button class="btn btn-sm btn-light" title="Settings">
                        <i class="bi bi-gear"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Category</th>
                                <th>Price</th>
                                <th>Stock</th>
                                <th>Expiry</th>
                                <th class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                var isExpired = item.ExpiryDate < DateTime.Today;
                                <tr class="@(item.Quantity < item.ReorderLevel ? "table-warning" : "") @(isExpired ? "expired-row" : "")">
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(item.ImagePath))
                                            {
                                                <img src="@item.ImagePath" class="product-image me-3" alt="@item.Name">
                                            }
                                            else
                                            {
                                                <div class="product-image me-3 bg-light d-flex align-items-center justify-content-center">
                                                    <i class="bi bi-image text-muted"></i>
                                                </div>
                                            }
                                        <div>
                                            <div class="fw-bold">@item.Name</div>
                                            <div class="text-muted small">
                                                @(item.Description != null && item.Description.Length > 30 ?
                                                                                                item.Description.Substring(0, 30) + "..." : item.Description)
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>@(item.Category?.Name ?? "N/A")</td>
                                <td class="fw-bold">Rs. @item.Price.ToString("N2")</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <span class="me-2">@item.Quantity</span>
                                        @if (item.Quantity < item.ReorderLevel)
                                            {
                                                <span class="badge-low">Low</span>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <span class="me-2">@item.ExpiryDate.ToString("dd MMM yyyy")</span>
                                            @if (isExpired)
                                            {
                                                <span class="badge-expired">Expired</span>
                                            }
                                        </div>
                                    </td>
                                    <td class="text-end action-buttons">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-purple">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set current sort option
            const urlParams = new URLSearchParams(window.location.search);
            const sortOrder = urlParams.get('sortOrder') || 'name';
            document.getElementById('sortSelect').value = sortOrder;

            // Set current algorithm
            const sortAlgorithm = urlParams.get('sortAlgorithm') || 'QuickSort';
            document.getElementById('algorithmSelect').value = sortAlgorithm;

            // Handle sort selection change
            document.getElementById('sortSelect').addEventListener('change', function() {
                updateUrl();
            });

            // Handle algorithm selection change
            document.getElementById('algorithmSelect').addEventListener('change', function() {
                updateUrl();
            });

            function updateUrl() {
                const sortValue = document.getElementById('sortSelect').value;
                const algorithm = document.getElementById('algorithmSelect').value;
                const searchString = '@ViewBag.CurrentFilter';

                let url = window.location.pathname + '?sortOrder=' + sortValue + '&sortAlgorithm=' + algorithm;

                if (searchString) {
                    url += '&searchString=' + encodeURIComponent(searchString);
                }

                window.location.href = url;
            }
        });
    </script>
</body>
</html>